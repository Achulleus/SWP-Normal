{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww21600\viewh12400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs48 \cf0 F\'fcr dieses Programm werden folgende Librarys ben\'f6tigt:\
- mysql-connector-java-8.0.2 1.jar\
- jason-20200518.jar\
- javafix.media.jar\
- javafix.graphics.jar\
- javafix.fxml.jar\
- javafix.controls.jar\
- javafix.base.jar\
- commons-io-2.8.0.jar\
\
Dieses Programm ist f\'fcr die Bestimmung der Tage andenen Frei ist. Dies kann in verschiedenen Problemstellungen hilfreich sein z.B.: wenn man wissen m\'f6chte an welchem Tag es am Besten ist nicht zu arbeiten.\
\
Der erste Teil besteht in der Bestimmung der Tage an deinen frei ist. Dies habe ich mit einer ArrayList Feiertage gel\'f6st. Als erstes werden die statischen Feiertage in die ArrayList hinzugef\'fcgt (in der Methode FeiertageBestimmen). Danach ist die List DynamischeFeiertage der Methode getWert \'fcbergeben worden und in dieser Methode werden die Dynamischen Feiertage aus der API geholt und zur ArrayList feiertage hinzugef\'fcgt. Abschlie\'dfend wird die Methode tagUeberpruefen() aufgerufen, in der die ArrayList Feiertage \'fcberpr\'fcft wird welche Tage diese Daten haben. Somit wird gespeichert wie viele Tage jedes Wochentages von der angegebenen Zeitspanne Feiertage sind. Die Zeitspanne wird beim ausf\'fchren des Programms abgefragt und der Benutzer kann das Anfangsjahr und Endjahr bestimmen.\
\
Der zweite Teil besteht in der Visualisierung durch javafx. Ich habe mich hier f\'fcr einKuchendiagramm entschieden, da ich finde das man hier denn prozentuellen Anteil der verschiedenen Wochentage am einfachsten und schnellsten erkennen kann. Dies ist mit der Methode start gel\'f6st.\
\
Der dritte Teil besteht in der Speicherung der Abfragen in eine Datenbank. Dies ist sehr hilfreich wenn man im sp\'e4teren Verlauf alle Abfragen noch einmal gesammelt sehen will. Die erste wichtige Methode ist das erstellen der Tabelle, dies geschieht in der Methode tabelleErstellen(). Zuerst wird versucht eine Verbindung mit dem Treiber herzustellen. Anschlie\'dfend mit der Datenbank. Hier wird nun mit dem Statement eine Tabelle erstellt. Danach muss in diese Tabelle die verschiedenen Eintr\'e4ge gespeichert werden. Dies geschieht in der Methode datenbankeingabe(). Es wird wieder die Verbindungen hergestellt und anschlie\'dfend ein INSERT INTO Befehl ausgef\'fchrt in dem die Daten in der zuvor erstellten Tabelle gespeichert werden. Die dritte Methode wird anschlie\'dfend zur Ausgabe der Tabelle verwendet. Diese Methode ist die Datenbankausgabe() in der wieder die Verbindungen erstellt werden und im Anschluss die Dateien mit einem ResultSet Objekt aus der Datenbank geholt und formatiert werden. Anschlie\'dfend werden diese noch ausgegeben.\
\
\
\
\
}